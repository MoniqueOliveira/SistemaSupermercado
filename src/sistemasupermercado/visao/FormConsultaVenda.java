/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemasupermercado.visao;

import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sistemasupermercado.dominio.PagamentoVenda;
import sistemasupermercado.dominio.Unidade;
import sistemasupermercado.dominio.Venda;
import sistemasupermercado.exceptions.PesquisaNulaException;
import sistemasupermercado.servicos.PagamentoServico;
import sistemasupermercado.servicos.VendaServico;

public class FormConsultaVenda extends javax.swing.JDialog {

    Unidade unidade;
    /**
     * Creates new form FormConsultaVenda
     */
    private FormConsultaVenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public FormConsultaVenda(java.awt.Frame parent, boolean modal, Unidade unidade) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.unidade = unidade;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIdVenda = new javax.swing.JTextField();
        txtOpCaixa = new javax.swing.JTextField();
        txtValorTotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPagamento = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(51, 153, 255));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("F2 - Seleciona item da tabela para consulta");
        jPanel7.add(jLabel13);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consulta de Vendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(51, 153, 255))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Vendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));

        tblVendas.setAutoCreateRowSorter(true);
        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblVendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblVendasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblVendas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));

        jLabel2.setText("ID Venda:");

        jLabel3.setText("Op. Caixa:");

        jLabel4.setText("Valor total:");

        jLabel5.setText("Hora:");

        txtOpCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpCaixaActionPerformed(evt);
            }
        });

        txtPagamento.setColumns(20);
        txtPagamento.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        txtPagamento.setLineWrap(true);
        txtPagamento.setRows(5);
        jScrollPane2.setViewportView(txtPagamento);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens"));

        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblItens);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel6.setText("Pagamento:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(10, 10, 10)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtOpCaixa)
                                .addComponent(txtIdVenda)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addGap(9, 9, 9)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHora, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtValorTotal)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIdVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtOpCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 56, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblVendasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblVendasKeyPressed
        // TODO add your handling code here:
        if (KeyStroke.getKeyStrokeForEvent(evt) == KeyStroke.getKeyStroke("F2")) {
            carregarObjetoSelecionado();
        }
    }//GEN-LAST:event_tblVendasKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        definirModeloDasTabelas();
        preencherTblVendas();
        
        txtIdVenda.setEditable(false);
        txtOpCaixa.setEditable(false);
        txtPagamento.setEditable(false);
        txtValorTotal.setEditable(false);
        txtHora.setEditable(false);
    }//GEN-LAST:event_formWindowOpened

    private void txtOpCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpCaixaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOpCaixaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormConsultaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormConsultaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormConsultaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormConsultaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormConsultaVenda dialog = new FormConsultaVenda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblItens;
    private javax.swing.JTable tblVendas;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtIdVenda;
    private javax.swing.JTextField txtOpCaixa;
    private javax.swing.JTextArea txtPagamento;
    private javax.swing.JTextField txtValorTotal;
    // End of variables declaration//GEN-END:variables

    private void preencherTblVendas() {
        limparTblVendas();
        VendaServico vendaServico = new VendaServico();
        PagamentoServico pagamentoServico = new PagamentoServico();
        DefaultTableModel dtm = (DefaultTableModel) tblVendas.getModel();
        try {
            List<Venda> vendas = vendaServico.listarVendasUnidade(unidade.getIdUnidade());
            for (int i = 0; i < vendas.size(); i++) {
                dtm.addRow(new Object[]{""});
                tblVendas.setValueAt(vendas.get(i).getIdVenda(), i, 0);
                tblVendas.setValueAt(vendas.get(i).getSessao().getUsuario().getNome(), i, 1);
                
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                tblVendas.setValueAt(sdf.format(vendas.get(i).getData().getTimeInMillis()), i, 2);
                
                if (vendas.get(i).isFinalizada()) {
                    tblVendas.setValueAt("Sim", i, 3);
                    
                    PagamentoVenda pagamentoVenda = new PagamentoVenda();
                    pagamentoVenda.setVenda(vendas.get(i));
                    pagamentoVenda = pagamentoServico.pesquisar(pagamentoVenda);
                    tblVendas.setValueAt(pagamentoVenda.obterTotal().toString().replaceAll("\\.", ","), i, 4);
                } else {
                    tblVendas.setValueAt("Não", i, 3);
                    tblVendas.setValueAt("Não definido", i, 4);
                }
            }
        } catch(RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha durante a execução.\n" + ex.getMessage(), 
                        "Não foi possível iniciar o formulario", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregarObjetoSelecionado() {
        if (tblVendas.getSelectedRowCount() == 0) return;
        
        Venda venda = new Venda();
        venda.setIdVenda(Integer.parseInt(tblVendas.getValueAt(tblVendas.getSelectedRow(), 0).toString()));
        
        VendaServico vendaServico = new VendaServico();
        try {
            venda = vendaServico.pesquisar(venda);
            if (!venda.isFinalizada()) return;
            
            PagamentoVenda pagamentoVenda = new PagamentoVenda();
            pagamentoVenda.setVenda(venda);
            pagamentoVenda = new PagamentoServico().pesquisar(pagamentoVenda);
            
            txtIdVenda.setText(venda.getIdVenda() + "");
            txtOpCaixa.setText(venda.getSessao().getUsuario().getNome());
            txtValorTotal.setText("R$ " + pagamentoVenda.obterTotal().toString().replaceAll("\\.", ","));
            txtPagamento.setText(definirTextoPagamento(pagamentoVenda));
            
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            txtHora.setText(sdf.format(venda.getData().getTimeInMillis()));
            
            preencherTblItens(venda);
        } catch (PesquisaNulaException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
        } catch (RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Não foi possível concluir a pesquisa.\n" + ex.getMessage(), 
                    "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private String definirTextoPagamento(PagamentoVenda pagamentoVenda) {
        StringBuilder textoPagamento = new StringBuilder();
            if (pagamentoVenda.getDinheiro().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Dinheiro: R$ ");
                textoPagamento.append(pagamentoVenda.getDinheiro().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getDebito().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Débito: R$ ");
                textoPagamento.append(pagamentoVenda.getDebito().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getCredito().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Crédito: R$ ");
                textoPagamento.append(pagamentoVenda.getCredito().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getCheque().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Cheque: R$ ");
                textoPagamento.append(pagamentoVenda.getCheque().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getVoucher().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Voucher: R$ ");
                textoPagamento.append(pagamentoVenda.getVoucher().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getOutros().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Outros: R$ ");
                textoPagamento.append(pagamentoVenda.getOutros().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            
            if (pagamentoVenda.getTroco().compareTo(BigDecimal.ZERO) > 0) {
                textoPagamento.append("Troco: R$ ");
                textoPagamento.append(pagamentoVenda.getTroco().toString().replaceAll("\\.", ","));
                textoPagamento.append("\n");
            }
            return textoPagamento.toString();
    }
    
    private void limparTblVendas() {
        DefaultTableModel dtm = (DefaultTableModel) tblVendas.getModel();
        dtm.setRowCount(0);
    }
    
    private void limparTblItens() {
        DefaultTableModel dtm = (DefaultTableModel) tblItens.getModel();
        dtm.setRowCount(0);
    }
    

    private void definirModeloDasTabelas() {
        tblItens.setModel(  
            new DefaultTableModel(  
               new Object[] []{ },  
               new String[]{"Item", "Desc. Reduzida", "Quantidade", "Subtotal (R$)", "Cancelado"}
            ) {  

            @Override
            public boolean isCellEditable(int row, int col) {  
                    return false;  
            }  

            }  
         ); 
        
        tblVendas.setModel(  
            new DefaultTableModel(  
               new Object[] []{ },  
               new String[]{"ID Venda", "Operador(a) de Caixa", "Hora", "Finalizada", "Valor total (R$)"}
            ) {  

            @Override
            public boolean isCellEditable(int row, int col) {  
                    return false;  
            }  

            }  
         ); 
        
        tblVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblVendas.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblVendas.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblVendas.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblVendas.getColumnModel().getColumn(3).setPreferredWidth(100);
        tblVendas.getColumnModel().getColumn(4).setPreferredWidth(200);
        
        tblItens.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblItens.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblItens.getColumnModel().getColumn(1).setPreferredWidth(120);
        tblItens.getColumnModel().getColumn(2).setPreferredWidth(40);
        tblItens.getColumnModel().getColumn(3).setPreferredWidth(40);
        tblItens.getColumnModel().getColumn(4).setPreferredWidth(20);
        
    }

    private void preencherTblItens(Venda venda) {
        limparTblItens();
        DefaultTableModel dtm = (DefaultTableModel) tblItens.getModel();
        for (int i = 0; i < venda.getItens().size(); i++) {
            dtm.addRow(new Object[]{""});
            tblItens.setValueAt(venda.getItens().get(i).getNumeroItem(), i, 0);
            tblItens.setValueAt(venda.getItens().get(i).getProduto().getDescricaoReduzida(), i, 1);
            tblItens.setValueAt(venda.getItens().get(i).getQuantidade().toString().replaceAll("\\.", ","), i, 2);
            tblItens.setValueAt(venda.getItens().get(i).getSubtotal().toString().replaceAll("\\.", ","), i, 3);
            
            String cancelado;
            if (venda.getItens().get(i).isCancelado()) cancelado = "Sim";
            else cancelado = "Não";
            
            tblItens.setValueAt(cancelado, i, 4);
        }
    }
    
    /**
     * Classe usada para criar as ações dos atalhos do teclado (F1, F2 e F3)
     */
    private class AtalhoAction extends AbstractAction {
	private String atalho;

	public AtalhoAction(String atalho)
	{
		super(atalho);
		this.atalho = atalho;
	}
        
        @Override
        public void actionPerformed(ActionEvent ae) {
            carregarObjetoSelecionado();
        }
    }
}
