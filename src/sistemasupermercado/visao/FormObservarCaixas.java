/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemasupermercado.visao;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import sistemasupermercado.dominio.Caixa;
import sistemasupermercado.dominio.PagamentoVenda;
import sistemasupermercado.dominio.Sessao;
import sistemasupermercado.dominio.SessaoCaixa;
import sistemasupermercado.dominio.Venda;
import sistemasupermercado.servicos.CaixaServico;
import sistemasupermercado.servicos.PagamentoServico;
import sistemasupermercado.servicos.SessaoCaixaServico;
import sistemasupermercado.servicos.VendaServico;


public class FormObservarCaixas extends javax.swing.JDialog {

    Sessao sessao;
    
    BigDecimal dinheiro = BigDecimal.ZERO;
    BigDecimal debito = BigDecimal.ZERO;
    BigDecimal credito = BigDecimal.ZERO;
    BigDecimal cheque = BigDecimal.ZERO;
    BigDecimal voucher = BigDecimal.ZERO;
    BigDecimal outros = BigDecimal.ZERO;
    BigDecimal total = BigDecimal.ZERO;
    /**
     * Creates new form FormObservarCaixas
     */
    private FormObservarCaixas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public FormObservarCaixas(java.awt.Frame parent, boolean modal, Sessao sessao) {
        super(parent, modal);
        initComponents();
        this.sessao = sessao;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCaixas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Caixas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observar Caixas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(51, 153, 255))); // NOI18N

        tblCaixas.setAutoCreateRowSorter(true);
        tblCaixas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblCaixas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(948, 357));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        definirModeloDeTabela();
        preencherTabela();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormObservarCaixas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormObservarCaixas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormObservarCaixas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormObservarCaixas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormObservarCaixas dialog = new FormObservarCaixas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCaixas;
    // End of variables declaration//GEN-END:variables
    
    private void preencherTabela() {
        limparTabela();
        CaixaServico caixaServico = new CaixaServico();
        SessaoCaixaServico sessaoCaixaServico = new SessaoCaixaServico();
        DefaultTableModel dtm = (DefaultTableModel) tblCaixas.getModel();
        //List<Caixa> caixas = new ArrayList<>();
        try {
            
            List<SessaoCaixa> sessoesCaixas = sessaoCaixaServico.listarSessoesAbertas(sessao.getUsuario().getUnidade().getIdUnidade());
            for (int i = 0; i < sessoesCaixas.size(); i++) {
                SessaoCaixa sessaoCaixa = sessoesCaixas.get(i);
                definirValores(sessaoCaixa);
                dtm.addRow(new Object[]{"", ""});
                tblCaixas.setValueAt(sessaoCaixa.getCaixa().getNumeroCaixa(), i, 0);
                
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                tblCaixas.setValueAt(sdf.format(sessaoCaixa.getSessao().getInicioSessao().getTimeInMillis()), i, 1);
                
                tblCaixas.setValueAt(sessaoCaixa.getSessao().getUsuario().getNome(), i, 2);
                tblCaixas.setValueAt(dinheiro.toString().replaceAll("\\.", ","), i, 3);
                tblCaixas.setValueAt(debito.toString().replaceAll("\\.", ","), i, 4);
                tblCaixas.setValueAt(credito.toString().replaceAll("\\.", ","), i, 5);
                tblCaixas.setValueAt(cheque.toString().replaceAll("\\.", ","), i, 6);
                tblCaixas.setValueAt(voucher.toString().replaceAll("\\.", ","), i, 7);
                tblCaixas.setValueAt(outros.toString().replaceAll("\\.", ","), i, 8);
                tblCaixas.setValueAt(total.toString().replaceAll("\\.", ","), i, 9);
                
                dinheiro = BigDecimal.ZERO;
                debito = BigDecimal.ZERO;
                credito = BigDecimal.ZERO;
                cheque = BigDecimal.ZERO;
                voucher = BigDecimal.ZERO;
                outros = BigDecimal.ZERO;
                total = BigDecimal.ZERO;
            }
        } catch(RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha durante a execução.\n" + ex.getMessage(), 
                        "Não foi possível iniciar o formulario", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void definirValores(SessaoCaixa sessaoCaixa) {
        VendaServico vendaServico = new VendaServico();
        PagamentoServico pagamentoServico = new PagamentoServico();
        
        try {
            List<Venda> vendas = vendaServico.listarVendasSessao(sessaoCaixa.getSessao().getIdSessao());
            PagamentoVenda pagamentoVenda; 
            for (Venda venda : vendas) {
                pagamentoVenda = new PagamentoVenda();
                pagamentoVenda.setVenda(venda);
                
                pagamentoVenda = pagamentoServico.pesquisar(pagamentoVenda);
                
                dinheiro = dinheiro.add(pagamentoVenda.getDinheiro());
                debito = debito.add(pagamentoVenda.getDebito());
                credito = credito.add(pagamentoVenda.getCredito());
                cheque = cheque.add(pagamentoVenda.getCheque());
                voucher = voucher.add(pagamentoVenda.getVoucher());
                outros = outros.add(pagamentoVenda.getOutros());
                dinheiro = dinheiro.subtract(pagamentoVenda.getTroco());
            }
            
            dinheiro = dinheiro.add(sessaoCaixa.getValorInicialCaixa());
            
            total = BigDecimal.ZERO;
            total = dinheiro.add(debito.add(credito.add(cheque.add(voucher.add(outros)))));
            
        } catch(RuntimeException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha durante a execução.\n segundo" + ex.getMessage(), 
                       "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void limparTabela() {
        DefaultTableModel dtm = (DefaultTableModel) tblCaixas.getModel();
        dtm.setRowCount(0);
    }
    
    private void definirModeloDeTabela() {
        tblCaixas.setModel(  
            new DefaultTableModel(
                    new Object[] []{ },
                    new String[]{"Nummero","Horário de abertura", "Operador", "Dinheiro (R$)", "Débito (R$)", "Crédito (R$)", 
                        "Cheque (R$)", "Voucher (R$)", "Outros (R$)", "Total (R$)"}
            ) {
                @Override
                public boolean isCellEditable(int row, int col) {  
                        return false;  
                }
            }
        ); 
        
        tblCaixas.getColumnModel().getColumn(0).setPreferredWidth(60);
        tblCaixas.getColumnModel().getColumn(1).setPreferredWidth(150);
        tblCaixas.getColumnModel().getColumn(2).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(3).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(4).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(5).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(6).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(7).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(8).setPreferredWidth(70);
        tblCaixas.getColumnModel().getColumn(9).setPreferredWidth(70);
        tblCaixas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

}
