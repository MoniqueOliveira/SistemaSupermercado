/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemasupermercado.visao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import sistemasupermercado.conexao.ConnectionFactory;
import sistemasupermercado.dominio.Sessao;
import sistemasupermercado.relatorios.GeradorDeRelatorioDeProdutosRetirados;
import sistemasupermercado.relatorios.GeradorDeRelatorioDeProdutosVendidos;
import sistemasupermercado.relatorios.GeradorDeRelatorioDeUsuarios;


public class FormGeradorDeRelatorioDeProdutosVendidos extends javax.swing.JDialog {

    int mesMin, mesMax, tipoPesquisa;
    String ano, categoria, dia, produto;
    Sessao sessao;
    /**
     * Creates new form FormGeradorDeRelatorioDeEntradas
     */
    private FormGeradorDeRelatorioDeProdutosVendidos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public FormGeradorDeRelatorioDeProdutosVendidos(java.awt.Frame parent, boolean modal, Sessao sessao) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.sessao = sessao;
    }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbMesMin = new javax.swing.JComboBox<>();
        btnConfirmar = new javax.swing.JButton();
        lblano = new javax.swing.JLabel();
        cmbAno = new javax.swing.JComboBox<>();
        lblMeses = new javax.swing.JLabel();
        lblMes2 = new javax.swing.JLabel();
        cmbMesMax = new javax.swing.JComboBox<>();
        lbldia = new javax.swing.JLabel();
        cmbDia = new javax.swing.JComboBox<>();
        lblCategoria = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblProduto = new javax.swing.JLabel();
        txtProduto = new javax.swing.JTextField();
        cmbCategoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório de Produtos Vendidos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gerar relatório de produtos vendidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(51, 153, 255))); // NOI18N

        cmbMesMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));

        btnConfirmar.setText("Gerar Relatório");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        lblano.setText("Selecione o ano:");

        lblMeses.setText("Selecione os meses:");

        lblMes2.setText("a");

        cmbMesMax.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));

        lbldia.setText("Selecione o dia:");

        cmbDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cmbDia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDiaItemStateChanged(evt);
            }
        });
        cmbDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDiaActionPerformed(evt);
            }
        });

        lblCategoria.setText("Selecione a categoria:");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não utilizar filtros", "Data", "Mês", "Período", "Produto", "Produto e data", "Produto e período", "Categoria", "Categoria e data", "Categoria e período" }));
        cmbFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFiltroItemStateChanged(evt);
            }
        });

        jLabel1.setText("Selecione o tipo de filtro para o relatório:");

        lblProduto.setText("Digite o nome ou ID do produto:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblProduto)
                        .addGap(18, 18, 18)
                        .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConfirmar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCategoria)
                            .addComponent(lbldia)
                            .addComponent(lblano)
                            .addComponent(lblMeses))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbMesMin, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblMes2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbMesMax, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbldia)
                    .addComponent(cmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMesMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMes2)
                    .addComponent(cmbMesMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMeses))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblano))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        preencherCmbAno();
        preencherCmbCategoria();
        tipoPesquisa=9;
        lblProduto.setVisible(false);
        lblCategoria.setVisible(false);
        lblMes2.setVisible(false);
        lblMeses.setVisible(false);
        lblano.setVisible(false);
        lbldia.setVisible(false);
        cmbCategoria.setVisible(false);
        txtProduto.setVisible(false);
        cmbAno.setVisible(false);
        cmbDia.setVisible(false);
        cmbMesMax.setVisible(false);
        cmbMesMin.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void cmbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFiltroItemStateChanged
        // TODO add your handling code here:

        switch(cmbFiltro.getSelectedIndex()){
            case (0): //nenhum filtro
                tipoPesquisa=9;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(false);
                lblMeses.setVisible(false);
                lblano.setVisible(false);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(false);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                cmbAno.setVisible(false);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(false);
            break;
            case (1)://dia
                tipoPesquisa=3;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(false);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(true);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(true);
                cmbDia.setVisible(true);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                lblMeses.setText("Selecione o mês:");
            break;
            case (2)://mes
                tipoPesquisa=6;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(false);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(true);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                lblMeses.setText("Selecione o mês:");
                break;
            case (3)://periodo
                tipoPesquisa=6;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(true);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(true);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(true);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                lblMeses.setText("Selecione os meses:");
                break;
            case (4)://produto
                tipoPesquisa=7;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(false);
                lblMeses.setVisible(false);
                lblano.setVisible(false);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(false);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(false);
                txtProduto.setVisible(true);
                lblProduto.setVisible(true);
                break;
            case (5)://produto e dia
                tipoPesquisa=1;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(false);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(true);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(true);
                cmbDia.setVisible(true);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(true);
                lblProduto.setVisible(true);
                lblMeses.setText("Selecione o mês:");
                break;
            case (6)://produto e periodo
                tipoPesquisa=4;
                lblCategoria.setVisible(false);
                lblMes2.setVisible(true);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(false);
                cmbAno.setVisible(true);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(true);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(true);
                lblProduto.setVisible(true);
                lblMeses.setText("Selecione os meses:");
                 break;
            case (7): //categoria
                tipoPesquisa=8;
                lblCategoria.setVisible(true);
                lblMes2.setVisible(false);
                lblMeses.setVisible(false);
                lblano.setVisible(false);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(true);
                cmbAno.setVisible(false);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(false);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                 break;
            case (8)://data e categoria
                tipoPesquisa=2;
                lblCategoria.setVisible(true);
                lblMes2.setVisible(false);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(true);
                cmbCategoria.setVisible(true);
                cmbAno.setVisible(true);
                cmbDia.setVisible(true);
                cmbMesMax.setVisible(false);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                lblMeses.setText("Selecione o mês:");
            break;
            case (9)://periodo e categoria
                tipoPesquisa=5;
                lblCategoria.setVisible(true);
                lblMes2.setVisible(true);
                lblMeses.setVisible(true);
                lblano.setVisible(true);
                lbldia.setVisible(false);
                cmbCategoria.setVisible(true);
                cmbAno.setVisible(true);
                cmbDia.setVisible(false);
                cmbMesMax.setVisible(true);
                cmbMesMin.setVisible(true);
                txtProduto.setVisible(false);
                lblProduto.setVisible(false);
                lblMeses.setText("Selecione os meses:");
                break;
        }

    }//GEN-LAST:event_cmbFiltroItemStateChanged

    private void cmbDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDiaActionPerformed

    private void cmbDiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDiaItemStateChanged
        // TODO add your handling code here:
        /*if(cmbDia.getSelectedItem() == "Não pesquisar por dia" || cmbDia.getSelectedIndex()==0){
            cmbMesMax.setVisible(true);
            lblMes2.setVisible(true);
            lblMeses.setText("Selecione os meses:");
        }else {
            dia = cmbDia.getSelectedItem().toString();
            cmbMesMax.setVisible(false);
            lblMes2.setVisible(false);
            lblMeses.setText("Selecione o mês:");
        }*/
    }//GEN-LAST:event_cmbDiaItemStateChanged

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:

        if(tipoPesquisa==9){
            dia="0";
            ano="0";
            mesMin=0;
            mesMax=0;
            categoria="0";
            produto="0";
        }else {
            switch(cmbMesMin.getSelectedIndex()){
                case (0):
                mesMin =1;
                break;
                case (1):
                mesMin =2;
                break;
                case (2):
                mesMin =3;
                break;
                case (3):
                mesMin =4;
                break;
                case (4):
                mesMin =5;
                break;
                case (5):
                mesMin =6;
                break;
                case (6):
                mesMin =7;
                break;
                case (7):
                mesMin =8;
                break;
                case (8):
                mesMin =9;
                break;
                case (9):
                mesMin =10;
                break;
                case (10):
                mesMin =11;
                break;
                case (11):
                mesMin =12;
                break;
                default:
                mesMin=0;
            }

            switch(cmbMesMax.getSelectedIndex()){
                case (0):
                mesMax =1;
                break;
                case (1):
                mesMax =2;
                break;
                case (2):
                mesMax =3;
                break;
                case (3):
                mesMax =4;
                break;
                case (4):
                mesMax =5;
                break;
                case (5):
                mesMax =6;
                break;
                case (6):
                mesMax =7;
                break;
                case (7):
                mesMax =8;
                break;
                case (8):
                mesMax =9;
                break;
                case (9):
                mesMax =10;
                break;
                case (10):
                mesMax =11;
                break;
                case (11):
                mesMax =12;
                break;
                default:
                mesMax = 0;
            }

            ano = cmbAno.getSelectedItem().toString();

            dia = cmbDia.getSelectedItem().toString();
            categoria = cmbCategoria.getSelectedItem().toString();

            if(txtProduto.getText().equals("")){
                produto = "0";
            }else produto = txtProduto.getText();
            
            if(cmbFiltro.getSelectedIndex()==2){
                mesMax=mesMin;
            }
        }
        dispose();

        GeradorDeRelatorioDeProdutosVendidos g = new GeradorDeRelatorioDeProdutosVendidos();
        try {
            g.abrirRelatorio(sessao.getUsuario().getUnidade().getIdUnidade(), produto, categoria, dia,  mesMin, mesMax, ano, tipoPesquisa).setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(FormGeradorDeRelatorioDeProdutosVendidos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGeradorDeRelatorioDeProdutosVendidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGeradorDeRelatorioDeProdutosVendidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGeradorDeRelatorioDeProdutosVendidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGeradorDeRelatorioDeProdutosVendidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormGeradorDeRelatorioDeProdutosVendidos dialog = new FormGeradorDeRelatorioDeProdutosVendidos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JComboBox<String> cmbAno;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JComboBox<String> cmbDia;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JComboBox<String> cmbMesMax;
    private javax.swing.JComboBox<String> cmbMesMin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblMes2;
    private javax.swing.JLabel lblMeses;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblano;
    private javax.swing.JLabel lbldia;
    private javax.swing.JTextField txtProduto;
    // End of variables declaration//GEN-END:variables
    public void preencherCmbAno() {
        try {
            //List<String> anos = new ArrayList();
            String sql = "select distinct year(data) from entradas_produtos";
            PreparedStatement pstm = new ConnectionFactory().getConnection().prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            while (rs.next())
                cmbAno.addItem(rs.getString(1));
            
        } catch(SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha durante a execução.\n" + ex.getMessage(),
                    "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public void preencherCmbCategoria() {
        try {
            String sql = "select descricao from categorias_produtos";
            PreparedStatement pstm = new ConnectionFactory().getConnection().prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            while (rs.next())
                cmbCategoria.addItem(rs.getString(1));
            
        } catch(SQLException ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu uma falha durante a execução.\n" + ex.getMessage(),
                    "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }

}
